{"ast":null,"code":"import React, { Component } from 'react';\nexport default class Sprite extends Component {\n  constructor(_ref) {\n    let {\n      canvas,\n      position,\n      velocity,\n      image,\n      sprites,\n      username,\n      frames = {\n        max: 1\n      }\n    } = _ref;\n    this.position = position;\n    this.image = image;\n    this.sprites = sprites;\n    this.frames = {\n      ...frames,\n      val: 0,\n      elapsed: 0\n    };\n    this.username = username;\n    this.image.onload = () => {\n      this.width = this.image.width / this.frames.max;\n      this.height = this.image.height;\n    };\n    this.moving = false;\n  }\n  draw() {\n    const c = canvas.getContext('2d');\n    c.drawImage(this.image, this.frames.val * this.width, 0, this.image.width / this.frames.max, this.image.height, this.position.x, this.position.y, this.image.width / this.frames.max, this.image.height);\n    if (!this.moving) return;\n    if (this.frames.max > 1) {\n      this.frames.elapsed++;\n    }\n    if (this.frames.elapsed % 5 === 0) {\n      if (this.frames.val < this.frames.max - 1) this.frames.val++;else this.frames.val = 0;\n    }\n  }\n}\n\n// class Boundary {\n//     static width = 48\n//     static height = 48\n//     constructor({position}) {\n//         this.position = position\n//         this.width = 48\n//         this.height = 48\n//     }\n\n//     draw() {\n//         c.fillStyle = 'red'\n//         c.fillRect(this.position.x, this.position.y, this.width, this.height)\n//     }\n// }","map":{"version":3,"names":["React","Component","Sprite","constructor","canvas","position","velocity","image","sprites","username","frames","max","val","elapsed","onload","width","height","moving","draw","c","getContext","drawImage","x","y"],"sources":["/home/aweaver92/Phase 5/Phase-5-Game/src/components/Sprite.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Sprite extends Component  {\r\n    constructor({canvas, position, velocity, image, sprites, username, frames = {max: 1}}) {\r\n        this.position = position\r\n        this.image = image\r\n        this.sprites = sprites\r\n        this.frames = {...frames, val: 0, elapsed: 0}\r\n        this.username = username\r\n\r\n        this.image.onload = () => {\r\n            this.width = this.image.width / this.frames.max\r\n            this.height = this.image.height\r\n        }\r\n        this.moving = false\r\n    }\r\n\r\ndraw() {\r\n    const c = canvas.getContext('2d')\r\n    c.drawImage(\r\n        this.image,\r\n        this.frames.val * this.width,\r\n        0,\r\n        this.image.width / this.frames.max,\r\n        this.image.height,\r\n        this.position.x,\r\n        this.position.y,\r\n        this.image.width / this.frames.max,\r\n        this.image.height\r\n    )\r\n    if (!this.moving) return\r\n    if (this.frames.max > 1) {\r\n        this.frames.elapsed++\r\n    }\r\n\r\n    if (this.frames.elapsed % 5 === 0){\r\n        if (this.frames.val < this.frames.max - 1) this.frames.val++\r\n        else this.frames.val = 0\r\n    }\r\n\r\n}\r\n}\r\n\r\n\r\n// class Boundary {\r\n//     static width = 48\r\n//     static height = 48\r\n//     constructor({position}) {\r\n//         this.position = position\r\n//         this.width = 48\r\n//         this.height = 48\r\n//     }\r\n\r\n//     draw() {\r\n//         c.fillStyle = 'red'\r\n//         c.fillRect(this.position.x, this.position.y, this.width, this.height)\r\n//     }\r\n// }\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,eAAe,MAAMC,MAAM,SAASD,SAAS,CAAE;EAC3CE,WAAW,OAA4E;IAAA,IAA3E;MAACC,MAAM;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,OAAO;MAAEC,QAAQ;MAAEC,MAAM,GAAG;QAACC,GAAG,EAAE;MAAC;IAAC,CAAC;IACjF,IAAI,CAACN,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,MAAM,GAAG;MAAC,GAAGA,MAAM;MAAEE,GAAG,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAC,CAAC;IAC7C,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IAExB,IAAI,CAACF,KAAK,CAACO,MAAM,GAAG,MAAM;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACR,KAAK,CAACQ,KAAK,GAAG,IAAI,CAACL,MAAM,CAACC,GAAG;MAC/C,IAAI,CAACK,MAAM,GAAG,IAAI,CAACT,KAAK,CAACS,MAAM;IACnC,CAAC;IACD,IAAI,CAACC,MAAM,GAAG,KAAK;EACvB;EAEJC,IAAI,GAAG;IACH,MAAMC,CAAC,GAAGf,MAAM,CAACgB,UAAU,CAAC,IAAI,CAAC;IACjCD,CAAC,CAACE,SAAS,CACP,IAAI,CAACd,KAAK,EACV,IAAI,CAACG,MAAM,CAACE,GAAG,GAAG,IAAI,CAACG,KAAK,EAC5B,CAAC,EACD,IAAI,CAACR,KAAK,CAACQ,KAAK,GAAG,IAAI,CAACL,MAAM,CAACC,GAAG,EAClC,IAAI,CAACJ,KAAK,CAACS,MAAM,EACjB,IAAI,CAACX,QAAQ,CAACiB,CAAC,EACf,IAAI,CAACjB,QAAQ,CAACkB,CAAC,EACf,IAAI,CAAChB,KAAK,CAACQ,KAAK,GAAG,IAAI,CAACL,MAAM,CAACC,GAAG,EAClC,IAAI,CAACJ,KAAK,CAACS,MAAM,CACpB;IACD,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IAClB,IAAI,IAAI,CAACP,MAAM,CAACC,GAAG,GAAG,CAAC,EAAE;MACrB,IAAI,CAACD,MAAM,CAACG,OAAO,EAAE;IACzB;IAEA,IAAI,IAAI,CAACH,MAAM,CAACG,OAAO,GAAG,CAAC,KAAK,CAAC,EAAC;MAC9B,IAAI,IAAI,CAACH,MAAM,CAACE,GAAG,GAAG,IAAI,CAACF,MAAM,CAACC,GAAG,GAAG,CAAC,EAAE,IAAI,CAACD,MAAM,CAACE,GAAG,EAAE,MACvD,IAAI,CAACF,MAAM,CAACE,GAAG,GAAG,CAAC;IAC5B;EAEJ;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}