{"ast":null,"code":"var _jsxFileName = \"/home/aweaver92/Phase 5/Phase-5-Game/src/components/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  let [redirect, setRedirect] = useState(false);\n  const baseUrl = \"http://localhost:3000/\";\n  const usersUrl = baseUrl + \"users\";\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch(usersUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        setRedirect(true);\n      } else {\n        const {\n          message\n        } = await response.json();\n        setError(message);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign up here. Please?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: event => setConfirmPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_s(SignUp, \"mqweGcs+gReQbzZUDHn4cZV/bx0=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Navigate","SignUp","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","redirect","setRedirect","baseUrl","usersUrl","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","message","json","target","value"],"sources":["/home/aweaver92/Phase 5/Phase-5-Game/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  let [redirect, setRedirect] = useState(false);\r\n  const baseUrl = \"http://localhost:3000/\"\r\n  const usersUrl = baseUrl + \"users\"\r\n\r\n  if (redirect) {\r\n    return <Navigate to=\"/sign-in\" />;\r\n }\r\n\r\nconst handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(usersUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      if (response.ok) {\r\n        setRedirect(true);\r\n      } else {\r\n        const { message } = await response.json();\r\n        setError(message);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className='signForm'>\r\n    <h3>Sign up here. Please?</h3>\r\n    <br/>\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <p>{error}</p>}\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n      </label>\r\n      <br/>\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n      </label>\r\n      <br/>\r\n      <br />\r\n      <label>\r\n        Confirm Password:\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n        />\r\n      </label>\r\n      <br/>\r\n      <br />\r\n      <button type=\"submit\">Sign Up</button>\r\n    </form>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMa,OAAO,GAAG,wBAAwB;EACxC,MAAMC,QAAQ,GAAGD,OAAO,GAAG,OAAO;EAElC,IAAIF,QAAQ,EAAE;IACZ,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EACpC;EAED,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIZ,QAAQ,KAAKE,eAAe,EAAE;MAChCG,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,EAAE;QACrCM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAErB,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,IAAIa,QAAQ,CAACO,EAAE,EAAE;QACfb,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACL,MAAM;UAAEc;QAAQ,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QACzCjB,QAAQ,CAACgB,OAAO,CAAC;MACnB;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACA;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,eAC9B;MAAA;MAAA;MAAA;IAAA,QAAK,eACL;MAAM,QAAQ,EAAEX,YAAa;MAAA,WAC1BN,KAAK,iBAAI;QAAA,UAAIA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,kCAEE;UACE,IAAI,EAAC,OAAO;UACZ,KAAK,EAAEN,KAAM;UACb,QAAQ,EAAGa,KAAK,IAAKZ,QAAQ,CAACY,KAAK,CAACY,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAClD;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,qCAEE;UACE,IAAI,EAAC,UAAU;UACf,KAAK,EAAExB,QAAS;UAChB,QAAQ,EAAGW,KAAK,IAAKV,WAAW,CAACU,KAAK,CAACY,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QACrD;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,6CAEE;UACE,IAAI,EAAC,UAAU;UACf,KAAK,EAAEtB,eAAgB;UACvB,QAAQ,EAAGS,KAAK,IAAKR,kBAAkB,CAACQ,KAAK,CAACY,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAER;AAAC,GAhFQ3B,MAAM;AAAA,KAANA,MAAM;AAkFf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}