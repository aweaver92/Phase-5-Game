{"ast":null,"code":"var _jsxFileName = \"/home/aweaver92/Phase 5/Panic of the Apes/src/App.js\",\n  _s = $RefreshSig$();\n// npm install && json-server -p 3001 --watch db.json && npm start\n\n// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport Splash from \"./components/Splash\";\nimport LobbyPage from \"./components/LobbyPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [username, setName] = useState('');\n  let [showSplash, setShowSplash] = useState(true);\n  function addName(event, newName) {\n    event.preventDefault();\n    const baseUrl = \"http://localhost:3000/\";\n    const namesUrl = baseUrl + \"usernames/\";\n    let postRequest = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\": newName\n      })\n    };\n    fetch(namesUrl, postRequest).then(r => r.json()).then(response => {\n      setName(newName);\n      setShowSplash(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showSplash && /*#__PURE__*/_jsxDEV(Splash, {\n      username: username,\n      addName: addName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), !showSplash && /*#__PURE__*/_jsxDEV(LobbyPage, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9TmIO+LAJR9hUh6CJHeal2A10hs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Splash","LobbyPage","App","username","setName","showSplash","setShowSplash","addName","event","newName","preventDefault","baseUrl","namesUrl","postRequest","method","headers","body","JSON","stringify","fetch","then","r","json","response"],"sources":["/home/aweaver92/Phase 5/Panic of the Apes/src/App.js"],"sourcesContent":["// npm install && json-server -p 3001 --watch db.json && npm start\n\n// import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\nimport Splash from \"./components/Splash\";\nimport LobbyPage from \"./components/LobbyPage\";\n\nfunction App() {\n  let [username, setName] = useState('')\n  let [showSplash, setShowSplash] = useState(true)\n\n  function addName (event, newName) {\n    event.preventDefault()\n\n    const baseUrl = \"http://localhost:3000/\"\n    const namesUrl = baseUrl + \"usernames/\"\n\n    let postRequest = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"username\":newName\n      })\n    }\n    fetch(namesUrl, postRequest)\n    .then( r => r.json())\n    .then( response => {\n      setName(newName)\n      setShowSplash(false)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>{username}</h1>\n      </header>\n      {showSplash && <Splash\n          username = {username}\n          addName = {addName}\n        />\n      }\n      {!showSplash && <LobbyPage\n        username = {username}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAE/C,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAASQ,OAAO,CAAEC,KAAK,EAAEC,OAAO,EAAE;IAChCD,KAAK,CAACE,cAAc,EAAE;IAEtB,MAAMC,OAAO,GAAG,wBAAwB;IACxC,MAAMC,QAAQ,GAAGD,OAAO,GAAG,YAAY;IAEvC,IAAIE,WAAW,GAAG;MAChBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAACT;MACb,CAAC;IACH,CAAC;IACDU,KAAK,CAACP,QAAQ,EAAEC,WAAW,CAAC,CAC3BO,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACpBF,IAAI,CAAEG,QAAQ,IAAI;MACjBnB,OAAO,CAACK,OAAO,CAAC;MAChBH,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,uBACA;QAAA,UAAKH;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACV,EACRE,UAAU,iBAAI,QAAC,MAAM;MAClB,QAAQ,EAAIF,QAAS;MACrB,OAAO,EAAII;IAAQ;MAAA;MAAA;MAAA;IAAA,QACnB,EAEH,CAACF,UAAU,iBAAI,QAAC,SAAS;MACxB,QAAQ,EAAIF;IAAS;MAAA;MAAA;MAAA;IAAA,QACrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA3CQD,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}